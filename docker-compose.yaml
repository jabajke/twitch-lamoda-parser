version: "3.8"

networks:
  net:
    external: true

services:
  web:
    build: .
    container_name: "web"
    command: python main.py
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: always
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
    networks:
      - net

  mongo:
    image: mongo:latest
    container_name: mongo
    command: mongod --noauth
    env_file:
      - .env
    volumes:
      - mongo:/data/db
    ports:
      - "6000:27017"
    restart: always
    networks:
      - net

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.4
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka
    ports:
      - '9092:9092'
      - '9997:9997'
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - '8081:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: "yes"
    depends_on:
      - kafka
      - zookeeper

volumes:
  mongo: